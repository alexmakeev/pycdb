var testJson;function Palette(canvas,nodes){    this.svg = canvas;    this.nodediv = nodes;};Palette.prototype.setConfigData = function(data){    this.graph_configuration_data = data;    this.refreshCanvas();}Palette.prototype.refreshCanvas = function(){    if(this.svg===undefined||this.graph_configuration_data===undefined)        return;    this.svg.append("defs")        .append("symbol")        .attr("id","square")        .attr("viewbox","0 0 20 20")        .attr("width",20)        .attr("height",20)        .attr("preserveAspectRatio","xMidYMid slice")        .append("rect")        .attr("x",0)        .attr("y",0)        .attr("width",20)        .attr("height",20)    this.svg        .append("symbol")        .attr("id","circle")        .attr("viewbox","0 0 20 20")        .attr("width",20)        .attr("height",20)        .attr("x",0)        .attr("y",0)        .append("circle")        .attr("cx",10)        .attr("cy",10)        .attr("r",10)    this.svg.append("defs")        .append("symbol")        .attr("id","triangle")        .attr("viewbox","-10 -10 20 20")        .attr("width",20)        .attr("height",20)        .attr("preserveAspectRatio","xMidYMid slice")        .append("polygon")        .attr("points","10,0 20,20 0,20")    this.nodediv.selectAll("svg").data(this.graph_configuration_data[0]).enter()        .append("svg")        .attr("class","draggable")        .attr("width",function(d){            return d.size;        })        .attr("height",function(d){            return d.size;        })        .style("position","absolute")        .style("left",function(d){            return d.x;        })        .style("top",function(d){            return d.y;        })        .append("path")        .attr("transform", function(d) { return "translate(" + d.size/2 + "," + d.size/2 + ")"; })        .attr("d", d3.svg.symbol()        .size(function(d) { return d.size*15; })        .type(function(d) {            return d.shape;        }))        .attr("fill",function(d){            return d.color;        })        .on("mousedown",function(d){$(document).trigger("cid_chosen", d.id);})        /*.append("use")        .attr("xlink:href",function(d){return "#"+ d.shape})        .attr("fill",function(d){return d.color;})        .attr("x", function(d) {return d.x;})        .attr("y", function(d) {return d.y;})        .attr("width",40)        .attr("height",40)        .attr("draggable",true)        .on("mousedown",function(d){$(document).trigger("cid_chosen", d.id);})*/    this.svg.selectAll("text")       .data(this.graph_configuration_data[0])       .enter()       .append("text")       .text(function(d) {            return d.title;       })       .attr("x", function(d) {            return d.x+ d.size;       })       .attr("y", function(d) {            return d.y+ d.size;       })       .attr("font-family", "sans-serif")       .attr("font-size", "13px")       .attr("fill", "black");    this.svg.append("g").selectAll("text")       .data(this.graph_configuration_data[1])        .enter()       .append("text")       .text(function(d) {            return d.title;       })       .attr("x", function(d) {            return d.x-30;       })       .attr("y", function(d) {            return d.y-2;       })       .attr("font-family", "sans-serif")       .attr("font-size", "10px")       .attr("fill", "black");    this.svg.append("defs")        .append("marker")        .attr("id", "endmarker")        .attr("viewBox", "0 -5 10 10")        .attr("refX", 0)        .attr("refY", -0)        .attr("markerWidth", 3)        .attr("markerHeight", 3)        .attr("orient", "auto")        .append("path")        .attr("d", "M0,-5L10,0L0,5");    this.svg.append("g")        .selectAll("rect")        .data(this.graph_configuration_data[1])        .enter()        .append("rect")        .attr("width",40)        .attr("height",15)        .attr("x",function(d){return d.x-37})        .attr("y",function(d){return d.y-7})        .attr("style","opacity:0.05")        .on("click",function(d){            $(document).trigger("rel_chosen", d);        })    this.svg.selectAll("polyline")        .data(this.graph_configuration_data[1])        .enter()        .append("polyline")        .attr("points",function(d){            return d.x+","+ d.y+" "+(d.x-30)+","+d.y;        })        .attr("style",function(d){            return "stroke:"+ d.color+";stroke-width:"+ d.size;        })        .attr("class", function(d) { return d.shape; })        .attr("marker-end", function(d) { return "url(#endmarker)"; })    $("#palette_nodes svg").draggable({        revert: true,        revertDuration: 0,        stop: function(e){            $(document).trigger("add_node");        }    })};